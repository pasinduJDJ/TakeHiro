<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAfQAAAH0CAYAAADL1t+KAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAABaMSURBVHhe7d2Lu1RlvcDx8/ecp46Z4wUUTSCx1KxOpKKg
        eCPzrpRaqaWWopKWeEEjzRQzSsxbppWKgqWCnkQUNLwD4vECXuKiruO79kxnX97Ze8/smYH57c/7PJ/n
        CWe971p7N89898ysWfMf//lflQIA6G6CDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4A
        AQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQ
        gKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgAB
        CDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCA
        oANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEI
        OgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICg
        A0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6
        AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKAD
        QACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoA
        BCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANA
        AIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAE
        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
        OgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICg
        A0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6
        AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKAD
        QACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoA
        BCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANA
        AIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAE
        IOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AA
        gg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg
        6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACC
        DgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDo
        ABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIO
        AAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgA
        EICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4A
        AQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAF2vUvwfKrKy4lgzkmQAAAAASUVORK5CYII=
</value>
  </data>
</root>